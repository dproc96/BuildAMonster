{"version":3,"sources":["components/Box.js","components/Button.js","utility/Monster.js","components/Attack.js","components/Trait.js","components/Builder.js","components/Header.js","App.js","index.js"],"names":["Box","props","style","backgroundColor","theme","width","padding","borderRadius","marginTop","marginBotton","color","marginLeft","marginRight","boxShadow","textAlign","display","gridTemplateColumns","react_default","a","createElement","children","Button","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseEnter","setState","hovered","handleMouseLeave","state","plus","border","cursor","fontSize","onClick","React","Component","Monster","challenge","setDamageRemaining","value","ignoreIndex","arguments","length","undefined","multipliers","At Will; One Target","At Will; Multipe Targets","Limited Use; One Target","Limited Use; Multipe Targets","damageRemaining","console","log","attacks","forEach","attack","i","base","damage","targets","damageSlider","generalStats","0","ac","hp","dc","save","1/8","1/4","1/2","1","hasOwnProperty","stats","Math","floor","traits","baseStats","objectSpread","Attack","nameStyle","marginBottom","fontFamily","fontWeight","divStyle","flexDirection","name","index","onChange","type","concat","round","description","Trait","Builder","handleChange","e","_e$target","target","id","monster","addition","ceil","current","targetMultipliers","additions","defineProperty","handleSubmit","indexOf","handleBack","acSlider","hpSlider","attackSlider","dcSlider","saveSlider","handleAdvanced","advanced","handleUnAdvanced","handleAttackChange","_e$target2","splitName","split","parseInt","initial","multiplier","handleAddAttack","push","handleAddTrait","handleTraitChange","_e$target3","descriptions","_this2","inputStyle","margin","keys","map","key","toUpperCase","components_Box","gridColumn","components_Attack","assign","components_Button","trait","components_Trait","href","rel","Header","App","components_Header","components_Builder","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b544ea4d.chunk.js","sourcesContent":["import React from \"react\";\nimport * as theme from \"../utility/theme.json\";\n\nfunction Box(props) {\n    const style = {\n        backgroundColor: theme.primary,\n        width: props.width || 300,\n        padding: 10,\n        borderRadius: 5,\n        marginTop: 30,\n        marginBotton: 30,\n        color: theme.white,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        boxShadow: \"2px 2px 2px 2px rgba(0, 0, 0, 0.5)\",\n        textAlign: \"center\",\n        display: props.width ? \"grid\" : \"block\",\n    }\n    if (props.width) {\n        style.gridTemplateColumns = 300\n    }\n    return <div style={style}>{props.children}</div>\n}\n\nexport default Box;","import * as theme from \"../utility/theme.json\";\nimport React from \"react\";\n\nclass Button extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            hovered: false\n        }\n    }\n    handleMouseEnter = () => {\n        this.setState({ hovered: true })\n    }\n    handleMouseLeave = () => {\n        this.setState({ hovered: false })\n    }\n    render() {      \n        const style = {\n            backgroundColor: theme.primaryDark,\n            color: theme.white,\n            padding: this.props.plus ? \"5px 10px\" : 5,\n            borderRadius: this.props.plus ? \"50%\" : 3,\n            border: \"none\",\n            display: \"block\",\n            marginTop: 10,\n            cursor: this.state.hovered ? \"auto\" : \"pointer\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            fontSize: 16\n        }\n        return <button onClick={this.props.onClick} style={style}>{this.props.plus ? \" + \" : this.props.children}</button>\n    }\n}\n\nexport default Button","class Monster {\n    constructor(challenge) {\n        const generalStats = {\n            0: {\n                ac: 12,\n                hp: 3,\n                attack: 2,\n                damage: 1,\n                dc: 9,\n                save: 1\n            },\n            \"1/8\": {\n                ac: 12,\n                hp: 9,\n                attack: 3,\n                damage: 3,\n                dc: 10,\n                save: 2\n            },\n            \"1/4\": {\n                ac: 13,\n                hp: 15,\n                attack: 3,\n                damage: 5,\n                dc: 10,\n                save: 2\n            },\n            \"1/2\": {\n                ac: 13,\n                hp: 24,\n                attack: 4,\n                damage: 8,\n                dc: 11,\n                save: 3\n            },\n            1: {\n                ac: 13,\n                hp: 30,\n                attack: 4,\n                damage: 10,\n                dc: 11,\n                save: 3\n            }\n        }      \n        if (generalStats.hasOwnProperty(challenge)) { this.stats = generalStats[challenge] }\n        else {\n            if (challenge < 8) {\n                this.stats = {\n                    ac: 13 + Math.floor(challenge * 0.5),\n                    hp: 15 + (15 * challenge),\n                    attack: 4 + Math.floor(challenge * 0.5),\n                    damage: 5 + (5 * challenge),\n                    dc: 11 + Math.floor(challenge * 0.5),\n                    save: 3 + Math.floor(challenge * 0.5)\n                }\n            }\n            else {\n                this.stats = {\n                    ac: 13 + Math.floor(challenge * 0.5),\n                    hp: 15 * challenge,\n                    attack: 4 + Math.floor(challenge * 0.5),\n                    damage: 5 * challenge,\n                    dc: 11 + Math.floor(challenge * 0.5),\n                    save: 3 + Math.floor(challenge * 0.5)\n                }\n            }\n        }  \n        this.attacks = []\n        this.traits = []\n        this.damageRemaining = this.stats.damage\n        this.baseStats = {...this.stats}\n    }\n\n    setDamageRemaining = (value, ignoreIndex=-1) => {\n        const multipliers = {\n            \"At Will; One Target\": 1,\n            \"At Will; Multipe Targets\": 0.5,\n            \"Limited Use; One Target\": 4,\n            \"Limited Use; Multipe Targets\": 2\n        }\n        this.damageRemaining = value\n        console.log(this)\n        this.attacks.forEach((attack, i) => {\n            if (i !== ignoreIndex) {\n                const damage = attack.damage\n                const multiplier = multipliers[attack.targets]\n                const base = damage / multiplier\n                attack.damageSlider = base / value\n            }\n        })\n    }\n}\n\nexport default Monster","import React from \"react\"\nimport * as theme from \"../utility/theme.json\";\n\nfunction Attack(props) {\n    const nameStyle = {\n        marginBottom: 10,\n        backgroundColor: \"transparent\",\n        fontFamily: \"'Oswald', sans serif\",\n        fontSize: 18,\n        fontWeight: 700,\n        color: theme.white\n    }\n\n    const divStyle = {\n        backgroundColor: theme.primaryDark,\n        padding: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginBottom: 5\n    }\n\n    return (\n        <div style={divStyle}>\n            <input style={nameStyle} name={props.index + \"-name\"} onChange={props.onChange} value={props.name} />\n            <select name={props.index + \"-type\"} onChange={props.onChange} value={props.type}>\n                <option value=\"attack\">Attack Roll</option>\n                <option value=\"save\">Saving Throw</option>\n            </select>\n            <select name={props.index + \"-targets\"} onChange={props.onChange} value={props.targets}>\n                <option value=\"At Will; One Target\">At Will; One Target</option>\n                <option value=\"At Will; Multipe Targets\">At Will; Multipe Targets</option>\n                <option value=\"Limited Use; One Target\">Limited Use; One Target</option>\n                <option value=\"Limited Use; Multipe Targets\">Limited Use; Multipe Targets</option>\n            </select>\n            <p>{props.type === \"save\" ? `DC${props.dc} Saving Throw` : `+${props.attack} to hit`}; {Math.round(props.damage)} damage; {props.targets}</p>\n            <input type=\"range\" name={props.index + \"-damageSlider\"} onChange={props.onChange} value={props.damageSlider} />\n            <textarea name={props.index + \"-description\"} onChange={props.onChange} value={props.description}></textarea>\n        </div>\n    )\n}\n\nexport default Attack","import React from \"react\"\nimport * as theme from \"../utility/theme.json\";\n\nfunction Trait(props) {\n    const nameStyle = {\n        marginBottom: 10,\n        backgroundColor: \"transparent\",\n        fontFamily: \"'Oswald', sans serif\",\n        fontSize: 18,\n        fontWeight: 700,\n        color: theme.white\n    }\n\n    const divStyle = {\n        backgroundColor: theme.primaryDark,\n        padding: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginBottom: 5\n    }\n\n    return (\n        <div style={divStyle}>\n            <input style={nameStyle} name={props.index + \"-name\"} onChange={props.onChange} value={props.name} />\n            <textarea name={props.index + \"-description\"} onChange={props.onChange} value={props.description}></textarea>\n        </div>\n    )\n}\n\nexport default Trait","import React from \"react\";\nimport Box from \"./Box\";\nimport Button from \"./Button\";\nimport Monster from \"../utility/Monster\";\nimport * as theme from \"../utility/theme.json\";\nimport Attack from \"./Attack\";\nimport Trait from \"./Trait\";\n\nclass Builder extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            challenge: 0,\n            monster: null,\n            acSlider: 50,\n            hpSlider: 50,\n            attackSlider: 50,\n            damageSlider: 50,\n            dcSlider: 50,\n            saveSlider: 50,\n            advanced: false,\n            name: \"New CR 0 Monster\"\n        }\n        this.multipliers = {\n            hp: .5,\n            damage: .5\n        }\n        this.additions = {\n            ac: 3,\n            attack: 2,\n            dc: 2,\n            save: 2\n        }\n        this.descriptions = {\n            ac: \"If you raise the AC, consider lowering the HP or Offense\",\n            attack: \"This is the attack bonus for all attacks. If you raise it, consider lowering defense or damage\",\n            dc: \"This is the save DC for any effects of this creature\",\n            save: \"This is the bonus for the creature's best saving throw, others should be lower or equal to this\",\n            hp: \"If you raise HP, consider lowering AC or Offense\",\n            damage: \"This is the damage pool for the creature's entire turn, if you increase this, consider lowering the attack bonus or Defense\"\n        }\n        this.targetMultipliers = {\n            \"At Will; One Target\": 1,\n            \"At Will; Multipe Targets\": 0.5,\n            \"Limited Use; One Target\": 4,\n            \"Limited Use; Multipe Targets\": 2\n        }\n    }\n\n    handleChange = (e) => {\n        const { name, value, id } = e.target;\n        if (id) {\n            const monster = {...this.state.monster}\n            if (this.multipliers.hasOwnProperty(id)) {\n                let addition = Math.ceil(((value - 50) * this.multipliers[id] / 50) * monster.baseStats[id])\n                const current = monster.stats[id] \n                monster.stats[id] = monster.baseStats[id] + addition\n                if (id === \"damage\") { \n                    monster.damageRemaining += (monster.stats[id] - current)\n                    monster.attacks.forEach(attack => {\n                        const damage = attack.damage\n                        const multiplier = this.targetMultipliers[attack.targets]\n                        const base = damage / multiplier\n                        attack.damageSlider = (base / (monster.damageRemaining + base)) * 100\n                    })\n                }\n                this.setState({\n                    monster: monster\n                })\n            }\n            else if (this.additions.hasOwnProperty(id)) {\n                let addition = Math.ceil((value - 50) * this.additions[id] / 50)\n                monster.stats[id] = monster.baseStats[id] + addition\n                this.setState({\n                    monster: monster\n                })\n            }\n        }\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = () => {\n        const challenge = this.state.challenge;\n        if (challenge >= 0 || [\"1/8\", \"1/4\", \"1/2\"].indexOf(challenge) > -1) {\n            const monster = new Monster(challenge);\n            this.setState({\n                monster: monster,\n                name: `New CR ${challenge} Monster`\n            })\n        }\n    }\n\n    handleBack = () => {\n        this.setState({\n            monster: null,\n            acSlider: 50,\n            hpSlider: 50,\n            attackSlider: 50,\n            damageSlider: 50,\n            dcSlider: 50,\n            saveSlider: 50\n        })\n    }\n\n    handleAdvanced = () => {\n        this.setState({ advanced: true })\n    }\n\n    handleUnAdvanced = () => {\n        this.setState({ advanced: false })\n    }\n\n    handleAttackChange = (e) => {\n        let { name, value } = e.target;\n        const splitName = name.split(\"-\")\n        const index = parseInt(splitName[0])\n        name = splitName[1]\n\n        const monster = {...this.state.monster};\n        const initial = monster.attacks[index][name]\n        let damageRemaining = monster.damageRemaining\n        monster.attacks[index][name] = value;\n\n        /* \n        Need to make damage sliders responsive to changes in damage remaining whether from another attack or from base damage increasing\n        */\n\n        if (name === \"damageSlider\") {\n            const multiplier = this.targetMultipliers[monster.attacks[index].targets]\n            const current = monster.attacks[index].damage\n            const base = current / multiplier\n            const max = base + damageRemaining\n            const percent = value / 100\n            const damage = max * percent\n            monster.damageRemaining = damageRemaining + base - damage\n            monster.attacks.forEach((attack, i) => {\n                if (i !== index) {\n                    const damage = attack.damage\n                    const multiplier = this.targetMultipliers[attack.targets]\n                    const base = damage / multiplier\n                    attack.damageSlider = (base / (monster.damageRemaining + base)) * 100\n                }\n            })\n            monster.attacks[index].damage = damage * multiplier\n        }\n\n        if (name === \"targets\") {\n            const multiplier = this.targetMultipliers[value]\n            const current = monster.attacks[index].damage\n            const base = current / this.targetMultipliers[initial]\n            const damage = base * multiplier\n            monster.attacks[index].damage = damage\n        }\n\n        this.setState({ \n            monster: monster\n        })\n    }\n\n    handleAddAttack = () => {\n        const attack = {\n            name: \"Attack\",\n            type: \"attack\",\n            targets: \"At Will; One Target\",\n            dc: this.state.monster.stats.dc,\n            attack: this.state.monster.stats.attack,\n            damage: 0,\n            damageSlider: 0,\n            description: \"Description...\"\n        }\n        const monster = {...this.state.monster}\n        monster.attacks.push(attack)\n        this.setState({\n            monster: monster\n        })\n    }\n\n    handleAddTrait = () => {\n        const trait = {\n            name: \"Trait\",\n            description: \"Description...\"\n        }\n        const monster = { ...this.state.monster }\n        monster.traits.push(trait)\n        this.setState({\n            monster: monster\n        })\n    }\n\n    handleTraitChange = (e) => {\n        let { name, value } = e.target;\n        const splitName = name.split(\"-\")\n        const index = parseInt(splitName[0])\n        name = splitName[1]\n\n        const monster = { ...this.state.monster };\n        monster.traits[index][name] = value;\n\n        this.setState({\n            monster: monster\n        })\n    }\n\n    render() {\n        const inputStyle = { \n            textAlign: \"center\", \n            padding: 5, \n            margin: 10 \n        }\n\n        const nameStyle = {\n            ...inputStyle,\n            backgroundColor: \"transparent\", \n            fontFamily: \"'Oswald', sans serif\", \n            fontSize: 18, \n            fontWeight: 700, \n            color: theme.white\n        }\n        const monster = this.state.monster ? {...this.state.monster} : null\n        if (monster) {\n            const stats = Object.keys(monster.stats).map((key) => {\n                return (\n                    <div>\n                        <h3 key={key}><strong>{key.toUpperCase()}: </strong>{monster.stats[key]}</h3>\n                        <input onChange={this.handleChange} type=\"range\" key={key + \"Slider\"} name={key + \"Slider\"} id={key} value={this.state[key + \"Slider\"]} />\n                        <p>{this.descriptions[key]}</p>\n                    </div>\n                )\n            })\n            if (this.state.advanced) {\n                return (\n                    <Box width={600}>\n                        <input style={{ ...nameStyle, gridColumn: \"1 / span 2\" }} onChange={this.handleChange} value={this.state.name} name=\"name\"></input>\n                        <div style={{ gridColumn: \"1 / span 1\" }}>\n                            {stats}\n                        </div>\n                        <div style={{ gridColumn: \"2 / span 1\" }}>\n                            <h3>Attacks (Damage Pool Remaining: {Math.round(monster.damageRemaining)})</h3>\n                            {monster.attacks.map((attack, i) => {\n                                return <Attack onChange={this.handleAttackChange} {...attack} key={i} index={i}/>\n                            })}\n                            <Button onClick={this.handleAddAttack} plus={true} />\n                            <h3>Traits</h3>\n                            {monster.traits.map((trait, i) => {\n                                return <Trait onChange={this.handleTraitChange} {...trait} key={i} index={i}/>\n                            })}\n                            <Button onClick={this.handleAddTrait} plus={true} />\n                        </div>\n                        <div style={{ gridColumn: \"1 / span 2\" }}>\n                            <Button onClick={this.handleUnAdvanced}>Return to Basic Editor</Button>\n                            <Button onClick={this.handleBack}>Back</Button>\n                        </div>\n                    </Box>\n                )\n            }\n            return (\n                <Box>\n                    <input style={nameStyle} onChange={this.handleChange} value={this.state.name} name=\"name\"></input>\n                    {stats}\n                    <Button onClick={this.handleAdvanced}>Advanced Editor</Button>\n                    <Button onClick={this.handleBack}>Back</Button>\n                </Box>\n            )\n        }\n        return (\n            <Box>\n                <h2>Enter a Challenge Rating</h2>\n                <p>This could be a positive whole number, 0, 1/8, 1/4, or 1/2. Generally, the sum of the CRs in a fight should be less than or equal to half the total levels of the PCs (or a quarter if below level 5).</p>\n                <input style={inputStyle} onChange={this.handleChange} id=\"challenge\" name=\"challenge\" value={this.state.challenge}></input>\n                <p>Check out <a href=\"http://blogofholding.com/?p=7338\" target=\"_blank\" rel=\"noopener noreferrer\">The Blog of Holding</a> or <a href=\"https://slyflourish.com/instant_npc_for_dnd_5e.html\" target=\"_blank\" rel=\"noopener noreferrer\">Sly Flourish</a> for more information about how this system works. This project is not associated with either blog, just inspired by them.</p>\n                <Button onClick={this.handleSubmit}>Submit</Button>\n            </Box>\n        )\n    }\n}\n\nexport default Builder","import React from \"react\"\nimport * as theme from \"../utility/theme.json\"\n\nfunction Header(props) {\n    const style = {\n        backgroundColor: theme.primaryDark,\n        color: theme.white,\n        padding: \"20px 0px 20px 20px\",\n        width: \"Calc(100vw - 20px)\",\n        boxShadow: \"1px 1px 1px 1px rgba(0,0,0,0.5)\"\n    }\n\n    return (\n        <div style={style}>\n            <h1>{props.children}</h1>\n        </div>\n    )\n}\n\nexport default Header","import React, { Component } from \"react\";\nimport Builder from \"./components/Builder\";\nimport Header from \"./components/Header\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header>Build-A-Monster Workshop</Header>\n        <Builder />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}